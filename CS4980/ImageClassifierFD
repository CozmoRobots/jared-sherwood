import cv2
import numpy as np
import os 
orb = cv2.ORB_create(nfeatures=1000)
path = "CS4980/TrainingData"
#######Importing Images
images = []
classNames = []
myList = os.listdir(path)
for cl in myList:
    imgCurrent = cv2.imread(f'{path}/{cl}',0)
    images.append(imgCurrent)
    classNames.append(os.path.splitext(cl)[0])
print("Total Classes Detected", len(classNames))
print(classNames)
print(len(images),"Number of Images")

####### Finding Keypoint Descriptors
def findDesc(images):
    descriptList=[]
    for img in images:
        kp,des = orb.detectAndCompute(img,None)
        descriptList.append(des)
    return(descriptList)

def findID(img,desList,threshold = 15):
    kp2,des2 = orb.detectAndCompute(img,None)
    bf = cv2.BFMatcher()
    matchList = []
    finalVal = -1
    try:
        
        for des in desList:
            matches = bf.knnMatch(des,des2,k=2)
            good = []
            for m,n in matches:
                if m.distance < 0.75*n.distance:
                    good.append([m])
            matchList.append(len(good))
        #print(matchList)
    except:
        pass
    if len(matchList)!=0:
        if max(matchList) > threshold:
            finalVal = matchList.index(max(matchList))
    return finalVal
    

desList = findDesc(images)
print(len(desList), "length of desList")

cap = cv2.VideoCapture(0)

while True:
    
    success, img2 = cap.read()
    imgOriginal = img2.copy()
    img2 = cv2.cvtColor(img2,cv2.COLOR_BGR2GRAY)
    
    id = findID(img2,desList)
    if id != -1:
        cv2.putText(imgOriginal,classNames[id],(100,100),cv2.FONT_HERSHEY_COMPLEX,3,(0,0,255),1)
        
    
    cv2.imshow("imgOriginal",imgOriginal)
    cv2.waitKey(1)
    
    
    
    
    

    
#     bf = cv2.BFMatcher()
#     matches = bf.knnMatch(des1,des2,k=2)
# #     good = []
#     for m,n in matches:
#         if m.distance < 0.75*n.distance:
#             good.append([m])
#     print(len(good))        
#     img3 = cv2.drawMatchesKnn(img1,kp1,img2,kp2,good,None,flags=2)
   
    
    
#     #imgKp1 = cv2.drawKeypoints(img1,kp1,None)
#     #imgKp2 = cv2.drawKeypoints(img2,kp2,None)
#     cv2.imshow("img1",img1)
#     cv2.imshow("img2",img2)
#     cv2.imshow("img3",img3)
    
#    # cv2.imshow('Kp1',imgKp1)
#    # cv2.imshow('Kp2',imgKp2)
#     cv2.waitKey(0)
    
    
   
    
#     return
# Main()